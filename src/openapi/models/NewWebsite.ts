/* tslint:disable */
/* eslint-disable */
/**
 * package or prject name
 * Website crawling
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * (tsType: Omit<Website, 'id'>, schemaOptions: { title: 'NewWebsite', exclude: [ 'id' ] })
 * @export
 * @interface NewWebsite
 */
export interface NewWebsite {
    /**
     * 
     * @type {string}
     * @memberof NewWebsite
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof NewWebsite
     */
    url: string;
    /**
     * 
     * @type {number}
     * @memberof NewWebsite
     */
    pageLevels: number;
    /**
     * 
     * @type {string}
     * @memberof NewWebsite
     */
    snippet: string;
    /**
     * 
     * @type {number}
     * @memberof NewWebsite
     */
    frequency?: number;
    /**
     * 
     * @type {string}
     * @memberof NewWebsite
     */
    userId?: string;
}

/**
 * Check if a given object implements the NewWebsite interface.
 */
export function instanceOfNewWebsite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "pageLevels" in value;
    isInstance = isInstance && "snippet" in value;

    return isInstance;
}

export function NewWebsiteFromJSON(json: any): NewWebsite {
    return NewWebsiteFromJSONTyped(json, false);
}

export function NewWebsiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewWebsite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'url': json['url'],
        'pageLevels': json['pageLevels'],
        'snippet': json['snippet'],
        'frequency': !exists(json, 'frequency') ? undefined : json['frequency'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function NewWebsiteToJSON(value?: NewWebsite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'url': value.url,
        'pageLevels': value.pageLevels,
        'snippet': value.snippet,
        'frequency': value.frequency,
        'userId': value.userId,
    };
}

