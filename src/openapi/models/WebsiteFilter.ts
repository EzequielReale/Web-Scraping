/* tslint:disable */
/* eslint-disable */
/**
 * searchservice
 * Website crawling
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrequencyScopeFilterOrder } from './FrequencyScopeFilterOrder';
import {
    FrequencyScopeFilterOrderFromJSON,
    FrequencyScopeFilterOrderFromJSONTyped,
    FrequencyScopeFilterOrderToJSON,
} from './FrequencyScopeFilterOrder';
import type { WebsiteFields } from './WebsiteFields';
import {
    WebsiteFieldsFromJSON,
    WebsiteFieldsFromJSONTyped,
    WebsiteFieldsToJSON,
} from './WebsiteFields';

/**
 * 
 * @export
 * @interface WebsiteFilter
 */
export interface WebsiteFilter {
    /**
     * 
     * @type {number}
     * @memberof WebsiteFilter
     */
    offset?: number;
    /**
     * 
     * @type {number}
     * @memberof WebsiteFilter
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof WebsiteFilter
     */
    skip?: number;
    /**
     * 
     * @type {FrequencyScopeFilterOrder}
     * @memberof WebsiteFilter
     */
    order?: FrequencyScopeFilterOrder;
    /**
     * 
     * @type {WebsiteFields}
     * @memberof WebsiteFilter
     */
    fields?: WebsiteFields;
}

/**
 * Check if a given object implements the WebsiteFilter interface.
 */
export function instanceOfWebsiteFilter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebsiteFilterFromJSON(json: any): WebsiteFilter {
    return WebsiteFilterFromJSONTyped(json, false);
}

export function WebsiteFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebsiteFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'skip': !exists(json, 'skip') ? undefined : json['skip'],
        'order': !exists(json, 'order') ? undefined : FrequencyScopeFilterOrderFromJSON(json['order']),
        'fields': !exists(json, 'fields') ? undefined : WebsiteFieldsFromJSON(json['fields']),
    };
}

export function WebsiteFilterToJSON(value?: WebsiteFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'offset': value.offset,
        'limit': value.limit,
        'skip': value.skip,
        'order': FrequencyScopeFilterOrderToJSON(value.order),
        'fields': WebsiteFieldsToJSON(value.fields),
    };
}

