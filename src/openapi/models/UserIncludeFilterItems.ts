/* tslint:disable */
/* eslint-disable */
/**
 * package or prject name
 * Website crawling
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserScopeFilter } from './UserScopeFilter';
import {
    UserScopeFilterFromJSON,
    UserScopeFilterFromJSONTyped,
    UserScopeFilterToJSON,
} from './UserScopeFilter';

/**
 * 
 * @export
 * @interface UserIncludeFilterItems
 */
export interface UserIncludeFilterItems {
    /**
     * 
     * @type {string}
     * @memberof UserIncludeFilterItems
     */
    relation?: UserIncludeFilterItemsRelationEnum;
    /**
     * 
     * @type {UserScopeFilter}
     * @memberof UserIncludeFilterItems
     */
    scope?: UserScopeFilter;
}


/**
 * @export
 */
export const UserIncludeFilterItemsRelationEnum = {
    Websites: 'websites'
} as const;
export type UserIncludeFilterItemsRelationEnum = typeof UserIncludeFilterItemsRelationEnum[keyof typeof UserIncludeFilterItemsRelationEnum];


/**
 * Check if a given object implements the UserIncludeFilterItems interface.
 */
export function instanceOfUserIncludeFilterItems(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserIncludeFilterItemsFromJSON(json: any): UserIncludeFilterItems {
    return UserIncludeFilterItemsFromJSONTyped(json, false);
}

export function UserIncludeFilterItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserIncludeFilterItems {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relation': !exists(json, 'relation') ? undefined : json['relation'],
        'scope': !exists(json, 'scope') ? undefined : UserScopeFilterFromJSON(json['scope']),
    };
}

export function UserIncludeFilterItemsToJSON(value?: UserIncludeFilterItems | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'relation': value.relation,
        'scope': UserScopeFilterToJSON(value.scope),
    };
}

