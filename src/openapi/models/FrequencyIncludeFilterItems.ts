/* tslint:disable */
/* eslint-disable */
/**
 * searchservice
 * Website crawling
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrequencyScopeFilter } from './FrequencyScopeFilter';
import {
    FrequencyScopeFilterFromJSON,
    FrequencyScopeFilterFromJSONTyped,
    FrequencyScopeFilterToJSON,
} from './FrequencyScopeFilter';

/**
 * 
 * @export
 * @interface FrequencyIncludeFilterItems
 */
export interface FrequencyIncludeFilterItems {
    /**
     * 
     * @type {string}
     * @memberof FrequencyIncludeFilterItems
     */
    relation?: FrequencyIncludeFilterItemsRelationEnum;
    /**
     * 
     * @type {FrequencyScopeFilter}
     * @memberof FrequencyIncludeFilterItems
     */
    scope?: FrequencyScopeFilter;
}


/**
 * @export
 */
export const FrequencyIncludeFilterItemsRelationEnum = {
    Websites: 'websites'
} as const;
export type FrequencyIncludeFilterItemsRelationEnum = typeof FrequencyIncludeFilterItemsRelationEnum[keyof typeof FrequencyIncludeFilterItemsRelationEnum];


/**
 * Check if a given object implements the FrequencyIncludeFilterItems interface.
 */
export function instanceOfFrequencyIncludeFilterItems(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FrequencyIncludeFilterItemsFromJSON(json: any): FrequencyIncludeFilterItems {
    return FrequencyIncludeFilterItemsFromJSONTyped(json, false);
}

export function FrequencyIncludeFilterItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrequencyIncludeFilterItems {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'relation': !exists(json, 'relation') ? undefined : json['relation'],
        'scope': !exists(json, 'scope') ? undefined : FrequencyScopeFilterFromJSON(json['scope']),
    };
}

export function FrequencyIncludeFilterItemsToJSON(value?: FrequencyIncludeFilterItems | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'relation': value.relation,
        'scope': FrequencyScopeFilterToJSON(value.scope),
    };
}

