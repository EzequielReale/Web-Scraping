/* tslint:disable */
/* eslint-disable */
/**
 * searchservice
 * Website crawling
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrequencyScopeFilterFields } from './FrequencyScopeFilterFields';
import {
    FrequencyScopeFilterFieldsFromJSON,
    FrequencyScopeFilterFieldsFromJSONTyped,
    FrequencyScopeFilterFieldsToJSON,
} from './FrequencyScopeFilterFields';
import type { FrequencyScopeFilterOrder } from './FrequencyScopeFilterOrder';
import {
    FrequencyScopeFilterOrderFromJSON,
    FrequencyScopeFilterOrderFromJSONTyped,
    FrequencyScopeFilterOrderToJSON,
} from './FrequencyScopeFilterOrder';

/**
 * 
 * @export
 * @interface UserScopeFilter
 */
export interface UserScopeFilter {
    /**
     * 
     * @type {number}
     * @memberof UserScopeFilter
     */
    offset?: number;
    /**
     * 
     * @type {number}
     * @memberof UserScopeFilter
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof UserScopeFilter
     */
    skip?: number;
    /**
     * 
     * @type {FrequencyScopeFilterOrder}
     * @memberof UserScopeFilter
     */
    order?: FrequencyScopeFilterOrder;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof UserScopeFilter
     */
    where?: { [key: string]: any; };
    /**
     * 
     * @type {FrequencyScopeFilterFields}
     * @memberof UserScopeFilter
     */
    fields?: FrequencyScopeFilterFields;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof UserScopeFilter
     */
    include?: Array<{ [key: string]: any; }>;
}

/**
 * Check if a given object implements the UserScopeFilter interface.
 */
export function instanceOfUserScopeFilter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserScopeFilterFromJSON(json: any): UserScopeFilter {
    return UserScopeFilterFromJSONTyped(json, false);
}

export function UserScopeFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserScopeFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'skip': !exists(json, 'skip') ? undefined : json['skip'],
        'order': !exists(json, 'order') ? undefined : FrequencyScopeFilterOrderFromJSON(json['order']),
        'where': !exists(json, 'where') ? undefined : json['where'],
        'fields': !exists(json, 'fields') ? undefined : FrequencyScopeFilterFieldsFromJSON(json['fields']),
        'include': !exists(json, 'include') ? undefined : json['include'],
    };
}

export function UserScopeFilterToJSON(value?: UserScopeFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'offset': value.offset,
        'limit': value.limit,
        'skip': value.skip,
        'order': FrequencyScopeFilterOrderToJSON(value.order),
        'where': value.where,
        'fields': FrequencyScopeFilterFieldsToJSON(value.fields),
        'include': value.include,
    };
}

